<question>

年r %の複利でy 円を借り，n 年後に一括返済する場合の返 済額を計算するプログラムを作成せよ．ただし，r %の複利でn 年 借りた場合の利率を計算する部分を関数として作成せよ． 利率(単位 %)は正の小数で入力され， 金額(単位 円)と期間(単位 年)は正の整数で入力されると考えてよい．

 % ./interest
 利率(r): 7.5
 金額(y): 1000000
 期間(n): 2
 返済金額は 1155625 円です
 %
作成にあたっては下記の条件を満たすこと．

条件: 返済額は $y*(1+r/100)^n$円である．r%の複利でn年 間が経ったとき元金の何倍を返すか，すなわち， $(1+r/100)^n$を計算する関数 double interest(double r, int n) を作る．そしてmain()からinterest()を呼び出し，戻り値に yを掛けて返済額を求める．

条件: 返済額を整数型の変数で表現すること． 返済額は，小数点以下第1位を四捨五入すること． 浮動小数点数をint型変数に代入すれば，小数点以下の部分が切り捨てられる（教科書p.30）． よって，浮動小数点数に0.5を加えて，これをint型変数に代入すれば， 小数点以下は四捨五入できる． 関数を使って計算した返済額は浮動小数点数であるから，これを， 返済額を表現する整数型の変数に代入するときにはキャスト（教科書p.30）を用いること．

条件: べき乗計算には，あらかじめ用意されているC言語ライブラリ関数

double pow(double a, double x)

を使う．この関数でa の x 乗が計算できる． このプロトタイプ宣言からわかるように， 引数であるa, bにdouble型以外の値や変数を使うときには， キャストする必要がある． また，関数pow()の戻り値を double型以外の変数に代入するときにも， キャストする必要がある．

この関数pow()を使うには ソースコードの最初で stdio.h に加え
   #include <math.h>
と記述してヘッダファイル math.h を include する必要がある． 

</question>

<block>
block$#include <stdio.h>
#include<math.h>$!!
submodule$double interest(double, int);$!!
submodule$int main(void)$!!
block$double rate;
int y;
int num;
int money; $上から順に、利率、金額、期間、返済金額!!
block$printf("利率(r): ");
scanf("%f",&rate);$!!
block$printf("金額(y): ");
scanf("%d",&y);$!!
block$printf("期間(n): ");
scanf("%d",&num);$!!
block$money = (int)(y * interest(rate, num) + 0.5); $!!
block$printf("返済金額は%d円です\n", money);$!!
block$return 0;$!!
submodule$double interest(double r, int n)$!!
block$double result;$!!
block$result = (double)pow(1.0+r/100, (double)n);$!!
block$return result;$!!
</block>

<answer>
#include <stdio.h>
#include<math.h>

double interest(double, int);

int main(void)
{
  double rate; /* 利率 */
  int y; /* 金額 */
  int num; /* 期間 */
  int money; /* 金額 */

  /* 値の読み込み */
  printf("利率(r): ");
  scanf("%f",&rate);
  
  printf("金額(y): ");
  scanf("%d",&y);

  printf("期間(n): ");
  scanf("%d",&num);

  money = (int)(y * interest(rate, num) + 0.5); /* 四捨五入 */

  printf("返済金額は%d円です\n", money);

  return 0;
}


double interest(double r, int n)
{
  double result;

  result = (double )pow(1.0+r/100, (double )n);
  return result;
}

</answer>
