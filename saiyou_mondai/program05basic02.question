<question>

立方体の石を積み上げてピラミッドを作る． ピラミッドの任意の段では，上から見て正方形の面を作るように石を隙間なく並べる． 各段の一辺の石は，最上段から順に1個, 2個, 3個, ... と順次増えていく．

いま，王が用意した石の総数がキーボードから与えられるとする． ここでは，石の総数は必ず正の整数が入力されるとし， それ以外の場合は想定しなくてよい．

この石で，何段のピラミッドができ， いくつの石が余るかを計算するプログラムを, 以下の考え方に従い，whileループを使って作れ．

ある段の石の数を計算し，その石を使った後に残る石の数を計算する．
残った石が，次の段を作るのに十分な数だけある限りループする．
残った石で次の段を作れない場合にはループしてはいけない． このためにループ内での処理を書くには少し工夫が必要である． ループ内の処理をどのように書くべきか考えよ．

 % ./pyramid
 王様，石の数は？: 2
 その数の石でできるピラミッドは1段で，石は1個残ります
 % ./pyramid
 王様，石の数は？: 14
 その数の石でできるピラミッドは3段で，石は0個残ります
 % ./pyramid
 王様，石の数は？: 100
 その数の石でできるピラミッドは6段で，石は9個残ります
 %



</question>

<block>
block$#include <stdio.h>$!!
submodule$int main(void)$!!
block$int i; $段のインデックス!!
block$int block; $段を構成する石の個数!!
block$int remain; $残りの石の個数!!
block$printf("王様，石の数は？: ");$!!
block$scanf("%d", &remain);$!!
block$i = 1; $まずは1段目に初期値を設定!!
block$block = 1; $1段目を作るには1個の石が必要!!
loop$while(remain >= block)$次の段を作れるかぎりループ!!
block$remain -= block; $今回の段に使った石の数を減算!!
block$i++; $次の段を表すように i を増やす!!
block$block = i * i; $次の段を作るのに必要な石の数!!
block$printf("その数の石でできるピラミッドは%d段で，石は%d個残ります\n", i-1, remain);$!!
block$return 0;$!!
</block>

<answer>
#include <stdio.h>

int main(void)
{
    int i; /* 段のID */
    int block; /* 段を構成するの石の個数 */
    int remain; /* 残りの石の個数 */

    printf("王様，石の数は？: ");
    scanf("%d", &remain);

    i = 1; /* まずは1段目に初期値を設定 */
    block = 1; /* 1段目を作るには1個の石が必要 */
    while(remain >= block) { /* 次の段を作れるかぎりループ */
        remain -= block; /* 今回の段に使った石の数を減算 */
        i++; /* 次の段を表すように i を増やす */
        block = i * i; /* 次の段を作るのに必要な石の数 */
    }
    printf("その数の石でできるピラミッドは%d段で，石は%d個残ります\n", i-1, remain);
    return 0;
}
</answer>
