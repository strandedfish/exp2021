<question>

5つの文字列を格納するchar型変数の2次元配列を用意し， キーボードから5つの文字列を入力させて配列の各行に格納せよ．

それらの各行の長さを表示し、最も辞書順で早く登場する文字列を表示し、 さらにすべての文字列をつなげた文字列を作って表示せよ。


プログラムに必要な要素

1つ目の添字が要素数5、2つ目の添字が要素数256のchar型変数による2次元配列、および，辞書順で最も早く登場する文字列が何番目の文字列であるかを示すint型変数を用意せよ．
連結した文字の格納用に要素数1280のchar型変数による配列allを用意し、空文字列で初期化せよ．
fgets関数を用いてキーボードから入力された文字列を各行に直接 格納せよ．
ただし，文字列のあとの改行コードはナル文字に変更すること．

各行の長さはstrlen関数を用いて表示せよ．
辞書順で最も早い文字列を求めるさいはstrcmp関数をループ内で用いよ． 同時にstrcat関数を用いて各行の文字列をallの後ろに連結せよ．
最後にallの内容を表示せよ．


プログラム作成上のヒント

辞書順で文字列を並べると，文字コードの順で並べることになるので，小 さな値をもつ文字列が先に並ぶ．
strlen関数の返り値を整数値(int)で表示したい際は， キャスト演算子(int)を用いよ。
strlenなどの文字列を扱うライブラリ関数を用いる際は， プログラム冒頭に #include <string.h> と記述せよ。


実行例
% ./a.out
   1行めの文字列を入力してください(最大 255文字): 1-1-1
   2行めの文字列を入力してください(最大 255文字): NojiHigashi
   3行めの文字列を入力してください(最大 255文字): Kusatsushi
   4行めの文字列を入力してください(最大 255文字): Ritsumeikan
   5行めの文字列を入力してください(最大 255文字): University
   1行めの文字列は1-1-1で文字数は 5文字です．
   2行めの文字列はNojiHigashiで文字数は 11文字です．
   3行めの文字列はKusatsushiで文字数は 10文字です．
   4行めの文字列はRistumeikanで文字数は 11文字です．
   5行めの文字列はUniversityで文字数は 10文字です．
   辞書順で最も早いのは1-1-1でした．
   全て連結された文字列は1-1-1NojiHigashiKusatsushiRitsumeikanUniversityです．
%

</question>

<block>
block$#include <stdio.h>
#include <string.h>
#define MAX_LINE (5)
#define MAX_COLUMN (256)
#define MAX_STRING (1028)$!!
submodule$int main(void)$!!
block$char str[MAX_LINE][MAX_COLUMN];
int earliest;
int i;
char all[MAX_STRING] = ""; $str: 入力を保持する配列, earliest: 辞書順で最早の文字列のインデックス, all: すべての文字列の連結!!
loop$for(i = 0; i < MAX_LINE; i++) $!!
block$printf("%d行めの文字列を入力してください(最大 %d文字): ", i+1, MAX_COLUMN - 1);
fgets(str[i], MAX_COLUMN - 1, stdin);$!!
block$*(str[i] + strlen(str[i]) - 1) = '\0'; $!!
block$earliest = 0;$!!
loop$for(i = 0; i < MAX_LINE; i++) $!!
block$printf("%d行めの文字列は%sで文字数は%2d文字です．\n", i+1, str[i], (int)strlen(str[i]) );$!!
branch$if( strcmp(str[earliest], str[i]) > 0 ) $!!
block$earliest = i;$!!
block$strcat(all, str[i]);$!!
block$printf("辞書順で最も早いのは%sでした．\n", str[earliest]);$!!
block$printf("全て連結された文字列は%sです．\n", all);$!!
block$return 0;$!!
</block>

<answer>
#include <stdio.h>
#include <string.h>

#define MAX_LINE (5)
#define MAX_COLUMN (256)
#define MAX_STRING (1028)

int main(void)
{
  char str[MAX_LINE][MAX_COLUMN]; /* 入力を保持する配列 */
  int earliest; /* 辞書順で最早の文字列のインデックス */
  int i; /* ループ変数 */
  char all[MAX_STRING] = ""; /* すべての文字列の連結 */

 /* 配列に文字列を入力 */  
  for(i = 0; i < MAX_LINE; i++) {
    printf("%d行めの文字列を入力してください(最大 %d文字): ",
	   i+1, MAX_COLUMN - 1);
    fgets(str[i], MAX_COLUMN - 1, stdin);
    *(str[i] + strlen(str[i]) - 1) = '\0'; /* 改行コードをナル文字に */
  }

 /* 各文字列長を印字し，辞書順で再早の文字列を調べ，文字列を継ぎ足す */  
  earliest = 0;
  for(i = 0; i < MAX_LINE; i++) {
    printf("%d行めの文字列は%sで文字数は%2d文字です．\n",
	   i+1, str[i], (int)strlen(str[i]) );
    if( strcmp(str[earliest], str[i]) > 0 ) {
      /* いま注目しているものが辞書順で早く現れるなら */
      earliest = i;
    }
    /* いま注目している文字列を継ぎ足す */  
    strcat(all, str[i]);
  }
  printf("辞書順で最も早いのは%sでした．\n", str[earliest]);
  printf("全て連結された文字列は%sです．\n", all);

  return 0;
}


  
</answer>
