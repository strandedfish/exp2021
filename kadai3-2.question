<question>
<h3>char型変数</h3>
char 型の取りうる値の範囲は-128～127 である．
この範囲を越えるとどうなるか以下の計算を実行し試しなさい．
また，変数－ 128 または127 を代入する行，1 を引くまたは足す行，変数を印字する行はそれがわかるようにコメントを書きなさい．
1. char 型変数に-128 を代入し，そこから1 を引くと変数の内容はいくつになるか．
2. char 型変数に127 を代入し，そこへ1 を足すと変数の内容はいくつになるか．
なお，上記の動作をするプログラムをコンパイルしようとすると，「this decimal constant is unsigned only in ISO C90」のような警告が表示される
ことがある．
故意に範囲を越えようとしているので，今回に限りこの警告を無視してもよい．
</question>

<block>
block$#include <\空欄>$標準入出力に関する関数をインポートするため，適切なライブラリ名を指定せよ!!
submodule$int main(void)$!!
block$char c;$cを文字型として定義!!
block$c = -128;$!!
block$c = \空欄-1;$char型の変数cから1を減算せよ!!
block$printf("\空欄\n",c);$cを整数として印字して改行!!
block$c = 127;$!!
block$c = \空欄+1;$char型の変数cから1を加算せよ!!
block$printf("\空欄\n",c);$cを整数として印字して改行!!
</block>

<answer>
#include <stdio.h>

int main(void)
{
   char c; /*cを文字型として定義*/
	
   c = -128;
   c = c-1;
   printf("%d\n",c); /* cを整数として印字して改行 */
   
   c = 127; /* cに127の代入 */
   c = c + 1; /* cに1を足す */ 
   printf("%d\n",c); /* cを整数として印字して改行 */
   
   return 0;
}

</answer>
